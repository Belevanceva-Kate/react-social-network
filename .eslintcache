[{"/home/kate/projects/samurai/react-social-network/src/components/Navbar/Navbar.jsx":"1","/home/kate/projects/samurai/react-social-network/src/App.js":"2","/home/kate/projects/samurai/react-social-network/src/components/Profile/Profile.jsx":"3","/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/PostsContainer.jsx":"4","/home/kate/projects/samurai/react-social-network/src/components/Dialogs/DialogsContainer.jsx":"5","/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/Posts.jsx":"6","/home/kate/projects/samurai/react-social-network/src/StoreContext.js":"7","/home/kate/projects/samurai/react-social-network/src/reportWebVitals.js":"8","/home/kate/projects/samurai/react-social-network/src/redux/reducers/dialogs.js":"9","/home/kate/projects/samurai/react-social-network/src/components/Music/Music.jsx":"10","/home/kate/projects/samurai/react-social-network/src/components/News/News.jsx":"11","/home/kate/projects/samurai/react-social-network/src/components/Profile/Info/Info.jsx":"12","/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/Post/Post.jsx":"13","/home/kate/projects/samurai/react-social-network/src/redux/reducers/sidebar.js":"14","/home/kate/projects/samurai/react-social-network/src/components/Dialogs/Chat/Chat.jsx":"15","/home/kate/projects/samurai/react-social-network/src/components/Dialogs/Message/Message.jsx":"16","/home/kate/projects/samurai/react-social-network/src/components/Navbar/Friends/FriendsContainer.jsx":"17","/home/kate/projects/samurai/react-social-network/src/components/Navbar/Friends/Friends.jsx":"18","/home/kate/projects/samurai/react-social-network/src/redux/redux-store.js":"19","/home/kate/projects/samurai/react-social-network/src/components/Settings/Settings.jsx":"20","/home/kate/projects/samurai/react-social-network/src/components/Dialogs/Dialogs.jsx":"21","/home/kate/projects/samurai/react-social-network/src/components/Navbar/Friends/Friend/Friend.jsx":"22","/home/kate/projects/samurai/react-social-network/src/redux/reducers/profile.js":"23","/home/kate/projects/samurai/react-social-network/src/components/Users/Users.jsx":"24","/home/kate/projects/samurai/react-social-network/src/components/Users/UsersContainer.jsx":"25","/home/kate/projects/samurai/react-social-network/src/redux/reducers/users.js":"26","/home/kate/projects/samurai/react-social-network/src/components/Users/User/User.jsx":"27","/home/kate/projects/samurai/react-social-network/src/components/Header/Header.jsx":"28","/home/kate/projects/samurai/react-social-network/src/components/common/Preloader/Preloader.jsx":"29","/home/kate/projects/samurai/react-social-network/src/components/Profile/ProfileContainer.jsx":"30","/home/kate/projects/samurai/react-social-network/src/redux/reducers/auth.js":"31","/home/kate/projects/samurai/react-social-network/src/components/Header/HeaderContainer.jsx":"32","/home/kate/projects/samurai/react-social-network/src/api/api.js":"33","/home/kate/projects/samurai/react-social-network/src/hoc/withAuthRedirect.js":"34","/home/kate/projects/samurai/react-social-network/src/components/Profile/Info/Status/Status.jsx":"35","/home/kate/projects/samurai/react-social-network/src/components/Login/LoginForm/LoginForm.jsx":"36","/home/kate/projects/samurai/react-social-network/src/components/Login/Login.jsx":"37","/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/PostForm/PostForm.jsx":"38","/home/kate/projects/samurai/react-social-network/src/components/Dialogs/MessageForm/MessageForm.jsx":"39","/home/kate/projects/samurai/react-social-network/src/utils/validators/validators.js":"40","/home/kate/projects/samurai/react-social-network/src/components/common/FormControls/FormControls.js":"41"},{"size":1458,"mtime":1612985172450,"results":"42","hashOfConfig":"43"},{"size":1209,"mtime":1613751548387,"results":"44","hashOfConfig":"43"},{"size":373,"mtime":1613912840667,"results":"45","hashOfConfig":"43"},{"size":510,"mtime":1614366743810,"results":"46","hashOfConfig":"43"},{"size":564,"mtime":1614366452552,"results":"47","hashOfConfig":"43"},{"size":613,"mtime":1614454905708,"results":"48","hashOfConfig":"43"},{"size":349,"mtime":1612367742930,"results":"49","hashOfConfig":"43"},{"size":362,"mtime":1609772640616,"results":"50","hashOfConfig":"43"},{"size":968,"mtime":1614366441804,"results":"51","hashOfConfig":"43"},{"size":128,"mtime":1610100028943,"results":"52","hashOfConfig":"43"},{"size":124,"mtime":1610100035227,"results":"53","hashOfConfig":"43"},{"size":2287,"mtime":1613914115999,"results":"54","hashOfConfig":"43"},{"size":355,"mtime":1610025490500,"results":"55","hashOfConfig":"43"},{"size":441,"mtime":1610465448251,"results":"56","hashOfConfig":"43"},{"size":344,"mtime":1610027544852,"results":"57","hashOfConfig":"43"},{"size":320,"mtime":1610103171091,"results":"58","hashOfConfig":"43"},{"size":264,"mtime":1612378198189,"results":"59","hashOfConfig":"43"},{"size":565,"mtime":1612378230517,"results":"60","hashOfConfig":"43"},{"size":711,"mtime":1614065280629,"results":"61","hashOfConfig":"43"},{"size":140,"mtime":1610100043159,"results":"62","hashOfConfig":"43"},{"size":934,"mtime":1614454891144,"results":"63","hashOfConfig":"43"},{"size":281,"mtime":1610032699368,"results":"64","hashOfConfig":"43"},{"size":1884,"mtime":1614366733853,"results":"65","hashOfConfig":"43"},{"size":11559,"mtime":1613667450856,"results":"66","hashOfConfig":"43"},{"size":1855,"mtime":1613903684486,"results":"67","hashOfConfig":"43"},{"size":4751,"mtime":1613667466570,"results":"68","hashOfConfig":"43"},{"size":921,"mtime":1612988250919,"results":"69","hashOfConfig":"43"},{"size":799,"mtime":1613583852608,"results":"70","hashOfConfig":"43"},{"size":360,"mtime":1613399053092,"results":"71","hashOfConfig":"43"},{"size":1254,"mtime":1613912873037,"results":"72","hashOfConfig":"43"},{"size":2164,"mtime":1614163008623,"results":"73","hashOfConfig":"43"},{"size":603,"mtime":1613750926690,"results":"74","hashOfConfig":"43"},{"size":1807,"mtime":1614162573060,"results":"75","hashOfConfig":"43"},{"size":566,"mtime":1613849235226,"results":"76","hashOfConfig":"43"},{"size":1612,"mtime":1613982973306,"results":"77","hashOfConfig":"43"},{"size":1279,"mtime":1614455358821,"results":"78","hashOfConfig":"43"},{"size":364,"mtime":1614455350139,"results":"79","hashOfConfig":"43"},{"size":829,"mtime":1614455121691,"results":"80","hashOfConfig":"43"},{"size":837,"mtime":1614455130962,"results":"81","hashOfConfig":"43"},{"size":267,"mtime":1614453268256,"results":"82","hashOfConfig":"43"},{"size":1231,"mtime":1614456478403,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1xlv40w",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kate/projects/samurai/react-social-network/src/components/Navbar/Navbar.jsx",[],["181","182"],"/home/kate/projects/samurai/react-social-network/src/App.js",["183"],"import { Route } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport UsersContainer from './components/Users/UsersContainer';\nimport Settings from './components/Settings/Settings';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport './App.css';\n\nconst App = (props) => {\n\treturn (\n\t\t<div className='app-wrapper'>\n\t\t\t<HeaderContainer />\n\t\t\t<Navbar />\n\t\t\t<main className='app-wrapper-content'>\n\t\t\t\t<Route path='/profile/:id?' render={ () => <ProfileContainer /> } />\n\t\t\t\t<Route path='/dialogs' render={ () => <DialogsContainer /> } />\n\t\t\t\t<Route path='/news' component={ News } />\n\t\t\t\t<Route path='/music' component={ Music } />\n\t\t\t\t<Route path='/users' component={ UsersContainer } />\n\t\t\t\t<Route path='/settings' component={ Settings } />\n\t\t\t\t<Route path='/login' component={ LoginForm } />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n",["184","185"],"/home/kate/projects/samurai/react-social-network/src/components/Profile/Profile.jsx",[],["186","187"],"/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/PostsContainer.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Dialogs/DialogsContainer.jsx",["188"],"import { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport Dialogs from './Dialogs';\nimport { actionCreatorAddMessage } from '../../redux/reducers/dialogs';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tdialogs: state.dialogs\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddMessage: (message) => {\n\t\t\tdispatch(actionCreatorAddMessage(message));\n\t\t},\n\t};\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\t// withAuthRedirect\n)(Dialogs);","/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/Posts.jsx",[],"/home/kate/projects/samurai/react-social-network/src/StoreContext.js",["189","190"],"import React from 'react';\nimport store from \"./redux/redux-store\";\nimport App from \"./App\";\n\nconst StoreContext = React.createContext(null);\n\nexport const Provider = (props) => {\n    return (\n        <StoreContext.Provider value={ props.store }>\n            { props.children }\n        </StoreContext.Provider>\n    );\n}\n\nexport default StoreContext;","/home/kate/projects/samurai/react-social-network/src/reportWebVitals.js",[],"/home/kate/projects/samurai/react-social-network/src/redux/reducers/dialogs.js",[],"/home/kate/projects/samurai/react-social-network/src/components/Music/Music.jsx",[],["191","192"],"/home/kate/projects/samurai/react-social-network/src/components/News/News.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Profile/Info/Info.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/Post/Post.jsx",[],"/home/kate/projects/samurai/react-social-network/src/redux/reducers/sidebar.js",[],"/home/kate/projects/samurai/react-social-network/src/components/Dialogs/Chat/Chat.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Dialogs/Message/Message.jsx",[],["193","194"],"/home/kate/projects/samurai/react-social-network/src/components/Navbar/Friends/FriendsContainer.jsx",[],["195","196"],"/home/kate/projects/samurai/react-social-network/src/components/Navbar/Friends/Friends.jsx",[],"/home/kate/projects/samurai/react-social-network/src/redux/redux-store.js",[],"/home/kate/projects/samurai/react-social-network/src/components/Settings/Settings.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Dialogs/Dialogs.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Navbar/Friends/Friend/Friend.jsx",[],"/home/kate/projects/samurai/react-social-network/src/redux/reducers/profile.js",[],"/home/kate/projects/samurai/react-social-network/src/components/Users/Users.jsx",["197"],"import { NavLink } from 'react-router-dom';\nimport { followAPI } from '../../api/api';\nimport cls from './Users.module.css';\nimport avatar from '../../assets/images/user.png';\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\n    let pagesCount2 = 0;\n\n    pagesCount > 10 ? pagesCount2 = 10 : pagesCount2 = pagesCount;\n\n    let pages = [];\n\n    // for (let i = 1; i <= pagesCount; i++) {\n    for (let i = 1; i <= pagesCount2; i++) {\n        pages.push(i);\n    }\n\n    return (\n        <div className={ cls.users }>\n            <div className={ cls.pagination }>\n                <ul className={ cls.pagination__list }>\n                    {\n                        pages.map((page, i) => {\n                            return (\n                                <li className={ cls.pagination__item } key={ i.toString() }>\n                                    <span\n                                        className={\n                                            props.currentPage === page\n                                                ? `${cls.pagination__link} ${cls.active}`\n                                                : `${cls.pagination__link}`\n                                        }\n                                        onClick={ (e) => props.onPageChanged(page) }\n                                    >{ page }</span>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n            { props.users.map((el, i) => {\n                return <div className={ cls.user } key={ el.id }>\n                    <div className={ cls.info }>\n                        <NavLink to={ '/profile/' + el.id }>\n                            <div className={ cls.image }>\n                                <img src={ el.photos.small != null ? el.photos.small : avatar } alt='' />\n                            </div>\n                        </NavLink>\n                        { el.followed\n                            ? <button\n                                disabled={ props.followingInProgress.some(id => id === el.id) }\n                                onClick={ () => { props.unfollow(el.id); } }\n                            >Unfollow</button>\n                            : <button\n                                disabled={ props.followingInProgress.some(id => id === el.id) }\n                                onClick={ () => { props.follow(el.id); } }\n                            >Follow</button>\n                        }\n                    </div>\n                    <div className={ cls.content }>\n                        <div className={ cls.name }>{ el.name }</div>\n                        <div className={ cls.status }>{ el.status }</div>\n                    </div>\n                    <div className={ cls.location }>\n                        <p className={ cls.country }>{ 'el.location.country' }</p>\n                        <p className={ cls.city }>{ 'el.location.city' }</p>\n                    </div>\n                </div>\n            }) }\n        </div>\n    );\n};\n\nexport default Users;\n\n\n\n\n/*import React from 'react';\nimport * as axios from 'axios';\nimport avatar from '../../assets/images/user.png';\nimport cls from './Users.module.css';\n\nclass Users extends React.Component {\n\n    componentDidMount() {\n        axios\n            .get(`https://social-network.samuraijs.com/api/1.0/users?page=${ this.props.currentPage }&count=${ this.props.pageSize }`)\n            .then(response => {\n                // console.log(response);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalCount(response.data.totalCount);\n            });\n    }\n\n    onPageChanged = (page) => {\n        this.props.setCurrentPage(page);\n\n        axios\n            .get(`https://social-network.samuraijs.com/api/1.0/users?page=${ page }&count=${ this.props.pageSize }`)\n            .then(response => {\n                // console.log(response);\n                this.props.setUsers(response.data.items);\n            });\n    }\n\n    render() {\n\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n        let pagesCount2 = 0;\n\n        pagesCount > 10 ? pagesCount2 = 10 : pagesCount2 = pagesCount;\n\n        let pages = [];\n\n        // for (let i = 1; i <= pagesCount; i++) {\n        for (let i = 1; i <= pagesCount2; i++) {\n            pages.push(i);\n        }\n\n        return (\n            <div className={ cls.users }>\n                <div className={ cls.pagination }>\n\n                    <ul className={ cls.pagination__list }>\n\n                        {\n                            pages.map((page, i) => {\n                                return <li className={ cls.pagination__item } key={ i.toString() }>\n                                    <span\n                                        className={\n                                            this.props.currentPage === page\n                                                ? `${cls.pagination__link} ${cls.active}`\n                                                : `${cls.pagination__link}`\n                                        }\n                                        onClick={ (e) => this.onPageChanged(page) }\n                                    >{ page }</span>\n                                </li>\n                                /!*return <li\n                                    key={ i.toString() }\n                                    className={\n                                        this.props.currentPage === page\n                                            ? `${cls.pagination__link} ${cls.active}`\n                                            : `${cls.pagination__link}`\n                                    }\n                                    onClick={ () => this.props.setCurrentPage(page) }\n                                >{ page }</li>*!/\n                                /!*return <li className={ cls.pagination__item } key={ i.toString() }>\n                                    <a\n                                        href='?page=1'\n                                        className={\n                                            this.props.currentPage === page\n                                                ? `${cls.pagination__link} ${cls.active}`\n                                                : `${cls.pagination__link}`\n                                        }\n                                        onClick={ () => this.props.setCurrentPage(page) }\n                                    >{ page }</a>\n                                </li>*!/\n                            })\n                        }\n                    </ul>\n                </div>\n                { this.props.users.map((el, i) => {\n                    return <div className={ cls.user } key={ el.id }>\n                        <div className={ cls.info }>\n                            <div className={ cls.image }>\n                                <img src={ el.photos.small != null ? el.photos.small : avatar } alt='' />\n                            </div>\n                            { el.followed\n                                ? <button onClick={ () => this.props.unfollow(el.id) }>Unfollow</button>\n                                : <button onClick={ () => this.props.follow(el.id) }>Follow</button>\n                            }\n                        </div>\n                        <div className={ cls.content }>\n                            <div className={ cls.name }>{ el.name }</div>\n                            <div className={ cls.status }>{ el.status }</div>\n                        </div>\n                        <div className={ cls.location }>\n                            <p className={ cls.country }>{ 'el.location.country' }</p>\n                            <p className={ cls.city }>{ 'el.location.city' }</p>\n                        </div>\n                    </div>\n                }) }\n            </div>\n        );\n    }\n}\n\nexport default Users;*/\n\n\n/*\nimport * as axios from 'axios';\n// import User from './User/User';\nimport avatar from '../../assets/images/user.png';\nimport cls from './Users.module.css';\n\nconst Users = (props) => {\n\n    /!*let userElements = props.users.map((el, i) => {\n       return <User\n           key={ el.id }\n           img={ el.img }\n           followed={ el.followed }\n           fullName={ el.fullName }\n           status={ el.status }\n           country={ el.location.country }\n           city={ el.location.city }\n       />\n    });*!/\n\n    let getUsers = () => {\n        if (props.users.length === 0) {\n\n            axios\n                .get('https://social-network.samuraijs.com/api/1.0/users')\n                .then(response => {\n                    console.log(response);\n                    props.setUsers(response.data.items);\n                });\n\n            // props.setUsers([\n            //     { id: 1, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Dima', status: 'I am a boss', location: { country: 'Belarus', city: 'Minsk' }, followed: false },\n            //     { id: 2, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Andrey', status: 'I am a boss too', location: { country: 'Russia', city: 'Moscow' }, followed: false },\n            //     { id: 3, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Sveta', status: 'I am a boss too', location: { country: 'Kyiv', city: 'Ukraine' }, followed: true },\n            //     { id: 4, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Sasha', status: 'I like football', location: { country: 'Belarus', city: 'Minsk' }, followed: false },\n            //     { id: 5, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Viktor', status: 'I am a boss', location: { country: 'Belarus', city: 'Minsk' }, followed: true },\n            //     { id: 6, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Valera', status: 'I am a boss', location: { country: 'Belarus', city: 'Minsk' }, followed: false },\n            //     { id: 7, img:'https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png', fullName: 'Alex', status: 'I am a boss', location: { country: 'Belarus', city: 'Minsk' }, followed: false },\n            // ]);\n        }\n    }\n\n    let userElements = props.users.map((el, i) => {\n        return <div className={ cls.user } key={ el.id }>\n            <div className={ cls.info }>\n                <div className={ cls.image }>\n                    <img src={ el.photos.small != null ? el.photos.small : avatar } alt='' />\n                </div>\n                { el.followed\n                    ? <button onClick={ () => props.unfollow(el.id) }>Unfollow</button>\n                    : <button onClick={ () => props.follow(el.id) }>Follow</button>\n                }\n            </div>\n            <div className={ cls.content }>\n                <div className={ cls.name }>{ el.name }</div>\n                <div className={ cls.status }>{ el.status }</div>\n            </div>\n            <div className={ cls.location }>\n                <p className={ cls.country }>{ 'el.location.country' }</p>\n                <p className={ cls.city }>{ 'el.location.city' }</p>\n            </div>\n        </div>\n    });\n\n    return (\n        <div className={ cls.users }>\n            <button onClick={ getUsers }>Get users</button>\n            { userElements }\n        </div>\n    );\n}\n\nexport default Users;*/\n",["198","199"],"/home/kate/projects/samurai/react-social-network/src/components/Users/UsersContainer.jsx",["200"],"import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport {\n    setCurrentPage,\n    getUsers,\n    follow,\n    unfollow\n} from '../../redux/reducers/users';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\n\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (page) => {\n        this.props.setCurrentPage(page);\n        this.props.getUsers(page, this.props.pageSize);\n    }\n\n    render() {\n        return (\n            <>\n                { this.props.isFetching ? <Preloader /> : null }\n                <Users\n                    users={ this.props.users }\n                    totalCount={ this.props.totalCount }\n                    pageSize={ this.props.pageSize }\n                    currentPage={ this.props.currentPage }\n                    follow={ this.props.follow }\n                    unfollow={ this.props.unfollow }\n                    onPageChanged={ this.onPageChanged }\n                    followingInProgress={ this.props.followingInProgress }\n                />\n            </>\n        );\n    }\n}\n\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer);\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users.users,\n        pageSize: state.users.pageSize,\n        totalCount: state.users.totalCount,\n        currentPage: state.users.currentPage,\n        isFetching: state.users.isFetching,\n        followingInProgress: state.users.followingInProgress\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        setCurrentPage,\n        getUsers,\n        follow,\n        unfollow\n    }),\n    withAuthRedirect\n)(UsersContainer);","/home/kate/projects/samurai/react-social-network/src/redux/reducers/users.js",["201"],"import { followAPI, usersAPI } from '../../api/api';\n\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE-FOLLOWING-IN-PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USERS:\n            // изначально юзеры пустые. далее с сервера получаем ответ и заполняем стейт\n            // склеиваем 2 массива: те, которые были в стейте, и те, которые были в экшене\n            // return { ...state, users: [ ...state.users, ...action.users ] };\n\n            // перезатираем юзеров. чтобы при пагинаци не дублировалось и не склеивалось друг поддругом\n            return { ...state, users: action.users };\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.page };\n        case SET_TOTAL_COUNT:\n            return { ...state, totalCount: action.count };\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return { ...user, followed: true };\n                    }\n                    return user;\n                })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return { ...user, followed: false };\n                    }\n                    return user;\n                })\n            };\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching };\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFollowingInProgress\n                    ? [ ...state.followingInProgress, action.userId ]\n                    // фильтрация вернет нам новый массив, деструктуриз. не нужна\n                    : state.followingInProgress.filter(id => id != action.userId)\n            };\n        default:\n            return state;\n    }\n}\n\n/* Action Creators */\n\nexport const setUsers = (users) =>\n    ({ type: SET_USERS, users });\n\nexport const setCurrentPage = (page) =>\n    ({ type: SET_CURRENT_PAGE, page });\n\nexport const setTotalCount = (count) =>\n    ({ type: SET_TOTAL_COUNT, count });\n\nexport const followUser = (userId) =>\n    ({ type: FOLLOW, userId });\n\nexport const unfollowUser = (userId) =>\n    ({ type: UNFOLLOW, userId });\n\nexport const toggleIsFetching = (isFetching) =>\n    ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport const toggleFollowingInProgress = (isFollowingInProgress, userId) =>\n    ({ type: TOGGLE_FOLLOWING_IN_PROGRESS, isFollowingInProgress, userId });\n\n/* Thunk Creators */\n\nexport const getUsers = (currentPage, pageSize) => {\n    // возвращаем thunk. замыкание\n    return (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(toggleIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalCount(data.totalCount));\n            });\n    }\n}\n\nexport const follow = (userId) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingInProgress(true, userId));\n        followAPI.follow(userId)\n            .then(data => {\n                // сервер подтвердил, что подписка произошла\n                if (data.resultCode === 0) {\n                    dispatch(followUser(userId))\n                }\n                dispatch(toggleFollowingInProgress(false, userId));\n            });\n    }\n}\n\nexport const unfollow = (userId) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingInProgress(true, userId));\n        followAPI.unfollow(userId)\n            .then(data => {\n                // сервер подтвердил, что подписка произошла\n                if (data.resultCode === 0) {\n                    dispatch(unfollowUser(userId))\n                }\n                dispatch(toggleFollowingInProgress(false, userId));\n            });\n    }\n}\n\nexport default usersReducer;","/home/kate/projects/samurai/react-social-network/src/components/Users/User/User.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Header/Header.jsx",[],["202","203"],"/home/kate/projects/samurai/react-social-network/src/components/common/Preloader/Preloader.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Profile/ProfileContainer.jsx",["204"],"import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { getProfile, getStatus, updateStatus } from '../../redux/reducers/profile';\nimport Profile from './Profile';\n\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.id;\n\n        if (!userId) { userId = 2; }\n\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            // прокидываем все пропсы дочернему компоненту\n            <Profile { ...this.props }\n                profile={ this.props.profile }\n                status={ this.props.status }\n                updateStatus={ this.props.updateStatus }\n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profile.profile,\n        userId: state.auth.userId,\n        status: state.profile.status\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);","/home/kate/projects/samurai/react-social-network/src/redux/reducers/auth.js",[],"/home/kate/projects/samurai/react-social-network/src/components/Header/HeaderContainer.jsx",[],"/home/kate/projects/samurai/react-social-network/src/api/api.js",[],"/home/kate/projects/samurai/react-social-network/src/hoc/withAuthRedirect.js",[],"/home/kate/projects/samurai/react-social-network/src/components/Profile/Info/Status/Status.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Login/LoginForm/LoginForm.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Login/Login.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Profile/Posts/PostForm/PostForm.jsx",[],"/home/kate/projects/samurai/react-social-network/src/components/Dialogs/MessageForm/MessageForm.jsx",[],"/home/kate/projects/samurai/react-social-network/src/utils/validators/validators.js",[],"/home/kate/projects/samurai/react-social-network/src/components/common/FormControls/FormControls.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"205","replacedBy":"213"},{"ruleId":"207","replacedBy":"214"},{"ruleId":"205","replacedBy":"215"},{"ruleId":"207","replacedBy":"216"},{"ruleId":"209","severity":1,"message":"217","line":3,"column":10,"nodeType":"211","messageId":"212","endLine":3,"endColumn":26},{"ruleId":"209","severity":1,"message":"218","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":13},{"ruleId":"209","severity":1,"message":"219","line":3,"column":8,"nodeType":"211","messageId":"212","endLine":3,"endColumn":11},{"ruleId":"205","replacedBy":"220"},{"ruleId":"207","replacedBy":"221"},{"ruleId":"205","replacedBy":"222"},{"ruleId":"207","replacedBy":"223"},{"ruleId":"205","replacedBy":"224"},{"ruleId":"207","replacedBy":"225"},{"ruleId":"209","severity":1,"message":"226","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":19},{"ruleId":"205","replacedBy":"227"},{"ruleId":"207","replacedBy":"228"},{"ruleId":"209","severity":1,"message":"229","line":46,"column":5,"nodeType":"211","messageId":"212","endLine":46,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":61,"column":65,"nodeType":"232","messageId":"233","endLine":61,"endColumn":67},{"ruleId":"205","replacedBy":"234"},{"ruleId":"207","replacedBy":"235"},{"ruleId":"209","severity":1,"message":"217","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":26},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar",["236"],["237"],["236"],["237"],"'withAuthRedirect' is defined but never used.","'store' is defined but never used.","'App' is defined but never used.",["236"],["237"],["236"],["237"],["236"],["237"],"'followAPI' is defined but never used.",["236"],["237"],"'AuthRedirectComponent' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["236"],["237"],"no-global-assign","no-unsafe-negation"]